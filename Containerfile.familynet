# syntax=docker/dockerfile:1
FROM docker.io/golang:1.23 AS build
#RUN apk update
#RUN apk add alpine-sdk
#RUN apt install build-essential
WORKDIR /go/src/app
COPY . .
RUN go get ./...
#RUN go install -v ./...
#RUN go get -u golang.org/x/text/cmd/gotext
#RUN go generate ./...
RUN make build-static

# FROM docker.io/debian:latest
FROM docker.io/golang:1.23 
RUN apt update
RUN apt install --yes ca-certificates
RUN mkdir -p /app
# RUN mkdir -p /app/templates
# RUN go install github.com/pressly/goose/v3/cmd/goose@latest
WORKDIR /app
# COPY dm/migrations migrations
COPY --from=build /go/src/app/bin/picfit /app/picfit
# COPY templates /app/templates

EXPOSE 3001
CMD ["./picfit", "--config", "/config/config.json"]
